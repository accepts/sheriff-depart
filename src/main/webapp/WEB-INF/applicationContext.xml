<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--DB settings-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/police-patrol"/>
        <property name="username" value="postgres"/>
        <property name="password" value="postgres"/>
    </bean>


    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>ua.kiev.police</value>
            </list>
        </property>
    </bean>


    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!--For image uploadig-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1024000"/>
    </bean>


    <!--Security. SQL Schema:
    http://docs.spring.io/spring-security/site/docs/3.0.x/reference/appendix-schema.html
    http://docs.spring.io/spring-security/site/docs/3.1.3.RELEASE/reference/core-services.html
    -->
    <security:http auto-config="true">
        <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN"/>
        <security:form-login
                login-page="/login"
                default-target-url="/admin/"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password"/>
        <security:logout
                logout-success-url="/login?logout"/>
    </security:http>


    <security:authentication-manager>
        <!-- JDBC provider-->
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        authorities-by-username-query="SELECT username, authority FROM authorities WHERE username=?"
                                        users-by-username-query="SELECT username, password, enabled FROM users WHERE username=?"/>
        </security:authentication-provider>

        <!--In-Memory Authentication -->
        <security:authentication-provider>
             <security:user-service>
                <security:user name="admin" password="123" authorities="ROLE_ADMIN"/>
             </security:user-service>
         </security:authentication-provider>
    </security:authentication-manager>

</beans>









        <!--<security:authentication-manager>-->
        <!--<security:authentication-provider>-->
        <!--<security:jdbc-user-service data-source-ref="dataSource"-->
        <!--authorities-by-username-query="SELECT username, authority FROM authorities WHERE username=?"-->
        <!--users-by-username-query="SELECT username, password, enabled FROM users WHERE username=?"-->
        <!--/>-->
        <!--</security:authentication-provider>-->
        <!--</security:authentication-manager>-->

        <!-- ******************************************************************************************************  -->










